{"version":3,"sources":["components/Contact.js","components/Eduction.js","components/WorkExperience.js","App.js","index.js"],"names":["ShowError","props","contactErrorMessage","className","ContactForm","contactText","updateInput","id","type","placeholder","value","name","onChange","e","required","address","city","phone","email","ContactData","ContactInfo","submitResume","educationErrorMessage","EndDate","educationText","updateEducationText","dateEnd","EducationForm","addEducation","showEndDate","currentlyEnrolled","school","checked","dateStart","description","onClick","EducationItem","education","editEducation","i","src","alt","Education","educationItems","length","map","workErrorMessage","workText","updateWorkText","WorkForm","addWork","currentJob","company","WorkItem","work","editWork","WorkExperience","workItems","App","updateContactText","textField","tempContactText","state","target","setState","preventDefault","concat","uuid","edittedJob","removeJob","splice","filteredWorkItems","filter","tempWorkText","edittedSchool","removeSchool","filteredSchoolItems","tempEducationText","setSubmitResume","validateContactText","test","this","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4584d048.chunk.js","sourcesContent":["import '../styles/Contact.css';\n\nconst ShowError = (props) => {\n  const { contactErrorMessage } = props;\n  if (contactErrorMessage === '') return null;\n\n  return <div className='contact-error'>{contactErrorMessage}</div>;\n};\n\nconst ContactForm = (props) => {\n  const { contactText, updateInput, contactErrorMessage } = props;\n\n  return (\n    <form id='contact-form'>\n      <h2>Contact Info</h2>\n      <ShowError contactErrorMessage={contactErrorMessage} />\n\n      <label>\n        First and Last Name *\n        <input\n          id='name'\n          type='text'\n          placeholder='Name (Required)'\n          value={contactText.name}\n          onChange={(e) => updateInput(e, 'name')}\n          required\n        />\n      </label>\n\n      <label>\n        Address *\n        <input\n          id='address'\n          type='text'\n          placeholder='Address (Required)'\n          value={contactText.address}\n          onChange={(e) => updateInput(e, 'address')}\n        />\n      </label>\n\n      <label>\n        City *\n        <input\n          id='city'\n          type='text'\n          placeholder='City (Required)'\n          value={contactText.city}\n          onChange={(e) => updateInput(e, 'city')}\n        />\n      </label>\n\n      <label>\n        Phone Number *\n        <input\n          id='number'\n          type='tel'\n          placeholder='Phone Number (Required)'\n          value={contactText.phone}\n          onChange={(e) => updateInput(e, 'phone')}\n        />\n      </label>\n\n      <label>\n        Email *\n        <input\n          id='email'\n          type='email'\n          placeholder='Email (Required)'\n          value={contactText.email}\n          onChange={(e) => updateInput(e, 'email')}\n          required\n        />\n      </label>\n    </form>\n  );\n};\n\nconst ContactData = (props) => {\n  const { contactText } = props;\n\n  return (\n    <div className='saved-conact-info'>\n      <h1>{contactText.name}</h1>\n      <div className='contact-left'>\n        <h4>{contactText.address}</h4>\n        <h4>{contactText.city}</h4>\n      </div>\n      <div className='contact-right'>\n        <h4>{contactText.phone}</h4>\n        <h4>{contactText.email}</h4>\n      </div>\n    </div>\n  );\n};\n\nconst ContactInfo = (props) => {\n  const { contactText, updateInput, submitResume, contactErrorMessage } = props;\n\n  return (\n    <div id='contact-info'>\n      {submitResume ? (\n        <ContactData contactText={contactText} />\n      ) : (\n        <ContactForm\n          contactText={contactText}\n          updateInput={updateInput}\n          contactErrorMessage={contactErrorMessage}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default ContactInfo;\n","import '../styles/Education.css';\n\nconst ShowError = (props) => {\n  const { educationErrorMessage } = props;\n  if (educationErrorMessage === '') return null;\n\n  return <div className='education-error'>{educationErrorMessage}</div>;\n};\n\nconst EndDate = (props) => {\n  const { educationText, updateEducationText } = props;\n  return (\n    <label>\n      Last Day *\n      <input\n        type='text'\n        placeholder='Last Day (Required)'\n        value={educationText.dateEnd}\n        onChange={(e) => updateEducationText(e, 'dateEnd')}\n      />\n    </label>\n  );\n};\n\nconst EducationForm = (props) => {\n  const { educationText, updateEducationText, addEducation } = props;\n  const showEndDate = educationText.currentlyEnrolled ? null : (\n    <EndDate\n      educationText={educationText}\n      updateEducationText={updateEducationText}\n    />\n  );\n\n  return (\n    <div>\n      <h2>Education</h2>\n      <form id='school-form'>\n        <label>\n          School Name *\n          <input\n            type='text'\n            placeholder='School (Required)'\n            value={educationText.school}\n            onChange={(e) => updateEducationText(e, 'school')}\n            required\n          />\n        </label>\n\n        <label className='currently-enrolled'>\n          Still studying there?\n          <input\n            id='currentlyEnrolled'\n            type='checkbox'\n            name='currentlyEnrolled'\n            checked={educationText.currentlyEnrolled}\n            onChange={(e) => updateEducationText(e, 'currentlyEnrolled')}\n          />\n        </label>\n\n        <label>\n          {educationText.currentlyEnrolled === false\n            ? 'Date Started'\n            : 'Date Started *'}\n          <input\n            type='text'\n            placeholder='Date Started'\n            value={educationText.dateStart}\n            onChange={(e) => updateEducationText(e, 'dateStart')}\n            required\n          />\n        </label>\n\n        {showEndDate}\n\n        <label className='school-description'>\n          School Description\n          <textarea\n            name='schoolDescriptuon'\n            placeholder='School Description'\n            value={educationText.description}\n            onChange={(e) => updateEducationText(e, 'description')}\n          />\n        </label>\n        <button type='submit' onClick={addEducation}>\n          Add School\n        </button>\n      </form>\n    </div>\n  );\n};\n\nconst EducationItem = (props) => {\n  const { education, submitResume, editEducation, i } = props;\n\n  return (\n    <div className='saved-education'>\n      <h3 className='school-name'>{education.school} </h3>\n      {!submitResume && (\n        <img\n          className='edit-school'\n          src='img/edit_24dp.svg'\n          alt='Edit School'\n          onClick={() => editEducation(i)}\n        />\n      )}\n      <p className='dates-studying'>\n        {education.dateStart} {education.dateStart ? '-' : null}{' '}\n        {education.currentlyEnrolled ? 'Present' : education.dateEnd}\n      </p>\n      <p className='saved-school-description'>{education.description}</p>\n    </div>\n  );\n};\n\nconst Education = (props) => {\n  const {\n    educationText,\n    educationItems,\n    updateEducationText,\n    addEducation,\n    submitResume,\n    editEducation,\n    educationErrorMessage,\n  } = props;\n\n  return (\n    <div id='education'>\n      <ShowError educationErrorMessage={educationErrorMessage} />\n      {!submitResume && (\n        <EducationForm\n          educationText={educationText}\n          updateEducationText={updateEducationText}\n          addEducation={addEducation}\n        />\n      )}\n      {submitResume && educationItems.length > 0 && <h2>Education</h2>}\n      {educationItems.map((education, i) => (\n        <EducationItem\n          key={education.id}\n          education={education}\n          submitResume={submitResume}\n          editEducation={editEducation}\n          i={i}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Education;\n","import '../styles/WorkExperience.css';\n\nconst ShowError = (props) => {\n  const { workErrorMessage } = props;\n  if (workErrorMessage === '') return null;\n\n  return <div className='work-error'>{workErrorMessage}</div>;\n};\n\nconst EndDate = (props) => {\n  const { workText, updateWorkText } = props;\n  return (\n    <label>\n      Last Day *\n      <input\n        type='text'\n        placeholder='Last Day (Required)'\n        value={workText.dateEnd}\n        onChange={(e) => updateWorkText(e, 'dateEnd')}\n      />\n    </label>\n  );\n};\n\nconst WorkForm = (props) => {\n  const { workText, updateWorkText, addWork } = props;\n  const showEndDate = workText.currentJob ? null : (\n    <EndDate workText={workText} updateWorkText={updateWorkText} />\n  );\n\n  return (\n    <div>\n      <h2>Work Experience</h2>\n\n      <form id='work-form'>\n        <label>\n          Company Name *\n          <input\n            type='text'\n            placeholder='Company (Required)'\n            value={workText.company}\n            onChange={(e) => updateWorkText(e, 'company')}\n            required\n          />\n        </label>\n\n        <label className='current-job'>\n          Still working there?\n          <input\n            id='currentJob'\n            type='checkbox'\n            name='currentJob'\n            checked={workText.currentJob}\n            onChange={(e) => updateWorkText(e, 'currentJob')}\n          />\n        </label>\n\n        <label>\n          Date Started *\n          <input\n            type='text'\n            placeholder='Date Started (Required)'\n            value={workText.dateStart}\n            onChange={(e) => updateWorkText(e, 'dateStart')}\n            required\n          />\n        </label>\n\n        {showEndDate}\n\n        <label className='job-description'>\n          Job Description\n          <textarea\n            name='jobDescriptuon'\n            placeholder='Job Description'\n            value={workText.description}\n            onChange={(e) => updateWorkText(e, 'description')}\n          />\n        </label>\n        <button type='submit' onClick={addWork}>\n          Add Job\n        </button>\n      </form>\n    </div>\n  );\n};\n\nconst WorkItem = (props) => {\n  const { work, submitResume, editWork, i } = props;\n\n  return (\n    <div className='saved-jobs'>\n      <h3 className='company-name'>{work.company}</h3>\n      {!submitResume && (\n        <img\n          className='edit-job'\n          src='img/edit_24dp.svg'\n          alt='Edit Job'\n          onClick={() => editWork(i)}\n        />\n      )}\n      <p className='dates-worked'>\n        {work.dateStart} - {work.currentJob ? 'Present' : work.dateEnd}\n      </p>\n      <p className='saved-work-description'>{work.description}</p>\n    </div>\n  );\n};\n\nconst WorkExperience = (props) => {\n  const {\n    workText,\n    workItems,\n    updateWorkText,\n    addWork,\n    submitResume,\n    editWork,\n    workErrorMessage,\n  } = props;\n\n  return (\n    <div id='work-experience'>\n      <ShowError workErrorMessage={workErrorMessage} />\n      {!submitResume && (\n        <WorkForm\n          workText={workText}\n          updateWorkText={updateWorkText}\n          addWork={addWork}\n        />\n      )}\n      {submitResume && workItems.length > 0 && <h2>Work Experience</h2>}\n      {workItems.map((work, i) => (\n        <WorkItem\n          key={work.id}\n          work={work}\n          submitResume={submitResume}\n          editWork={editWork}\n          i={i}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default WorkExperience;\n","import React from 'react';\nimport './App.css';\nimport { v1 as uuid } from 'uuid';\nimport ContactInfo from './components/Contact';\nimport Education from './components/Eduction';\nimport WorkExperience from './components/WorkExperience';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      contactText: { name: '', address: '', city: '', phone: '', email: '' },\n      contactErrorMessage: '',\n\n      workItems: [],\n      workText: {\n        company: '',\n        dateStart: '',\n        dateEnd: '',\n        currentJob: false,\n        description: '',\n        id: uuid(),\n      },\n      workErrorMessage: '',\n\n      educationItems: [],\n      educationText: {\n        school: '',\n        dateStart: '',\n        dateEnd: '',\n        currentlyEnrolled: false,\n        description: '',\n        id: uuid(),\n      },\n      educationErrorMessage: '',\n\n      submitResume: false,\n    };\n  }\n\n  updateContactText = (e, textField) => {\n    const tempContactText = {\n      ...this.state.contactText,\n      [textField]: e.target.value,\n    };\n\n    this.setState({\n      contactText: tempContactText,\n    });\n  };\n\n  addWork = (e) => {\n    const { workText } = this.state;\n\n    e.preventDefault();\n\n    if (workText.company === '') {\n      return this.setState({\n        workErrorMessage: 'Please enter a company name',\n      });\n    }\n\n    if (workText.dateStart === '') {\n      return this.setState({\n        workErrorMessage: 'Please enter a start date',\n      });\n    }\n\n    if (!workText.currentJob && workText.dateEnd === '') {\n      return this.setState({\n        workErrorMessage: 'Please enter your last working day',\n      });\n    }\n\n    this.setState({\n      workItems: this.state.workItems.concat(this.state.workText),\n      workText: {\n        company: '',\n        currentJob: false,\n        dateStart: '',\n        dateEnd: '',\n        description: '',\n        id: uuid(),\n      },\n      workErrorMessage: '',\n    });\n  };\n\n  editWork = (i) => {\n    const edittedJob = this.state.workItems[i];\n    const removeJob = this.state.workItems.splice(i, 1);\n    const filteredWorkItems = this.state.workItems.filter(\n      (work) => work !== removeJob\n    );\n\n    this.setState({\n      workText: edittedJob,\n      workItems: filteredWorkItems,\n    });\n  };\n\n  updateWorkText = (e, textField) => {\n    const tempWorkText = {\n      ...this.state.workText,\n      [textField]: textField === 'currentJob' ? e.target.checked : e.target.value,\n    };\n\n    this.setState({\n      workText: tempWorkText,\n    });\n  };\n\n  addEducation = (e) => {\n    const { educationText } = this.state;\n\n    e.preventDefault();\n\n    if (educationText.school === '') {\n      return this.setState({\n        educationErrorMessage: \"Please enter your school's name\",\n      });\n    }\n\n    if (!educationText.currentlyEnrolled && educationText.dateEnd === '') {\n      return this.setState({\n        educationErrorMessage: 'Please enter your last school day',\n      });\n    }\n\n    if (educationText.currentlyEnrolled && educationText.dateStart === '') {\n      return this.setState({\n        educationErrorMessage: 'Please enter your first school day',\n      });\n    }\n\n    this.setState({\n      educationItems: this.state.educationItems.concat(this.state.educationText),\n      educationText: {\n        school: '',\n        currentlyEnrolled: false,\n        dateStart: '',\n        dateEnd: '',\n        description: '',\n        id: uuid(),\n      },\n      educationErrorMessage: '',\n    });\n  };\n\n  editEducation = (i) => {\n    const edittedSchool = this.state.educationItems[i];\n    const removeSchool = this.state.educationItems.splice(i, 1);\n    const filteredSchoolItems = this.state.educationItems.filter(\n      (school) => school !== removeSchool\n    );\n\n    this.setState({\n      educationText: edittedSchool,\n      educationItems: filteredSchoolItems,\n    });\n  };\n\n  updateEducationText = (e, textField) => {\n    const tempEducationText = {\n      ...this.state.educationText,\n      [textField]:\n        textField === 'currentlyEnrolled' ? e.target.checked : e.target.value,\n    };\n\n    this.setState({\n      educationText: tempEducationText,\n    });\n  };\n\n  setSubmitResume = () => {\n    this.setState({ submitResume: this.state.submitResume ? false : true });\n  };\n\n  validateContactText = () => {\n    const { name, address, city, phone, email } = this.state.contactText;\n\n    if (name === '') {\n      return this.setState({\n        contactErrorMessage: 'Please enter your first and last name',\n      });\n    }\n\n    if (address === '') {\n      return this.setState({\n        contactErrorMessage: 'Please enter your address',\n      });\n    }\n\n    if (city === '') {\n      return this.setState({\n        contactErrorMessage: 'Please enter your city',\n      });\n    }\n\n    if (phone === '') {\n      return this.setState({\n        contactErrorMessage: 'Please enter your phone number',\n      });\n    }\n\n    const emailRegex = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/i;\n\n    if (!emailRegex.test(email)) {\n      return this.setState({\n        contactErrorMessage: 'Please enter a valid email',\n      });\n    }\n\n    if (email === '') {\n      return this.setState({\n        contactErrorMessage: 'Please enter your email',\n      });\n    }\n\n    this.setState({ contactErrorMessage: '' });\n    this.setSubmitResume();\n  };\n\n  render() {\n    return (\n      <div id='resume-generator'>\n        <header>\n          <h2>Resume Generator</h2>\n          <button className='submit-resume' onClick={this.validateContactText}>\n            {this.state.submitResume ? 'Back' : 'Submit'}\n          </button>\n        </header>\n        <ContactInfo\n          contactText={this.state.contactText}\n          updateInput={this.updateContactText}\n          submitResume={this.state.submitResume}\n          contactErrorMessage={this.state.contactErrorMessage}\n        />\n        <WorkExperience\n          workItems={this.state.workItems}\n          workText={this.state.workText}\n          addWork={this.addWork}\n          updateWorkText={this.updateWorkText}\n          submitResume={this.state.submitResume}\n          editWork={this.editWork}\n          workErrorMessage={this.state.workErrorMessage}\n        />\n        <Education\n          educationItems={this.state.educationItems}\n          educationText={this.state.educationText}\n          addEducation={this.addEducation}\n          updateEducationText={this.updateEducationText}\n          submitResume={this.state.submitResume}\n          editEducation={this.editEducation}\n          educationErrorMessage={this.state.educationErrorMessage}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}